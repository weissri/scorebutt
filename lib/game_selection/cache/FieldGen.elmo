
Elm.FieldGen = function(elm){
  var N = Elm.Native, _N = N.Utils(elm), _L = N.List(elm), _E = N.Error(elm), _J = N.JavaScript(elm), _str = _J.toString, $moduleName = 'FieldGen';
  var Text = Elm.Text(elm);
  var Text = Elm.Text(elm);
  var Basics = Elm.Basics(elm);
  var Signal = Elm.Signal(elm);
  var List = Elm.List(elm);
  var Maybe = Elm.Maybe(elm);
  var Time = Elm.Time(elm);
  var Prelude = Elm.Prelude(elm);
  var Graphics = Graphics || {};
  Graphics.Element = Elm.Graphics.Element(elm);
  var Color = Elm.Color(elm);
  var Graphics = Graphics || {};
  Graphics.Collage = Elm.Graphics.Collage(elm);
  var Dict = Elm.Dict(elm);
  var Graphics = Graphics || {};
  Graphics.Input = Elm.Graphics.Input(elm);
  var Keyboard = Elm.Keyboard(elm);
  var _op = {};
  var remove = F2(function(n, xs){
    return function(){
      switch (xs.ctor) {
        case '::':
          switch (xs._0.ctor) {
            case '_Tuple2':
              return (_N.eq(xs._0._0,n) ? xs._1 : (Basics.otherwise ? _L.Cons({ctor:"_Tuple2", _0:xs._0._0, _1:xs._0._1},A2(remove, n, xs._1)) : _E.If($moduleName,'on line 44, column 17 to 60')));
          }break;
      }
      return _J.toList([]);}();});
  var insert = F3(function(n, v, xs){
    return function(){
      switch (xs.ctor) {
        case '::':
          switch (xs._0.ctor) {
            case '_Tuple2':
              return (_N.eq(xs._0._0,n) ? _L.Cons({ctor:"_Tuple2", _0:n, _1:v},xs._1) : (Basics.otherwise ? _L.Cons({ctor:"_Tuple2", _0:xs._0._0, _1:xs._0._1},A3(insert, n, v, xs._1)) : _E.If($moduleName,'on line 39, column 18 to 71')));
          }break;
      }
      return _J.toList([{ctor:"_Tuple2", _0:n, _1:v}]);}();});
  var fieldGen = function(txt){
    return function(){
      var fg = Graphics.Input.fields({ctor:"_Tuple2", _0:(0-1), _1:Graphics.Input.emptyFieldState});
      return Signal.lift(function(arg1){
        return function(){
          switch (arg1.ctor) {
            case '_Tuple2':
              return {ctor:"_Tuple2", _0:Graphics.Element.flow(Graphics.Element.down)(_L.Cons(A3(fg.field, F2(function(v0, v1){
                return {ctor:"_Tuple2", _0:v0, _1:v1};})((0-1)), txt, Graphics.Input.emptyFieldState),A2(List.map, function(arg1){
                return function(){
                  switch (arg1.ctor) {
                    case '_Tuple2':
                      return A3(fg.field, F2(function(v0, v1){
                        return {ctor:"_Tuple2", _0:v0, _1:v1};})(arg1._0), txt, arg1._1);
                  }_E.Case($moduleName,'on line 20, column 23 to 46')}();}, arg1._1))), _1:A2(List.map, function($){
                return function(_){
                  return _.string;}(Basics.snd($));}, arg1._1)};
          }_E.Case($moduleName,'between lines 19 and 20')}();})(A3(Signal.foldp, F2(function(arg2, arg1){
        return function(){
          switch (arg1.ctor) {
            case '_Tuple2':
              return function(){
                switch (arg2.ctor) {
                  case '_Tuple2':
                    return (_N.eq(arg2._0,(0-1)) ? (_N.eq(arg2._1.string,_str('')) ? {ctor:"_Tuple2", _0:arg1._0, _1:arg1._1} : (Basics.otherwise ? {ctor:"_Tuple2", _0:(arg1._0+1), _1:A3(insert, arg1._0, arg2._1, arg1._1)} : _E.If($moduleName,'between lines 26 and 28'))) : (Basics.otherwise ? (_N.eq(arg2._1.string,_str('')) ? {ctor:"_Tuple2", _0:arg1._0, _1:A2(remove, arg2._0, arg1._1)} : (Basics.otherwise ? {ctor:"_Tuple2", _0:arg1._0, _1:A3(insert, arg2._0, arg2._1, arg1._1)} : _E.If($moduleName,'between lines 29 and 33'))) : _E.If($moduleName,'between lines 25 and 33')));
                }_E.Case($moduleName,'between lines 25 and 33')}();
          }_E.Case($moduleName,'between lines 25 and 33')}();}), {ctor:"_Tuple2", _0:0, _1:_J.toList([])}, fg.events));}();};
  var chatbox = function(){
    var cbGen = Graphics.Input.fields(Graphics.Input.emptyFieldState);
    var fieldState = A3(Signal.foldp, F2(function(arg2, arg1){
      return function(){
        return function(){
          switch (arg2.ctor) {
            case '_Tuple2':
              return ((arg2._0&&!_N.eq(arg2._1.string,_str(''))) ? {ctor:"_Tuple2", _0:A3(cbGen.field, Basics.id, _str('Say something'), Graphics.Input.emptyFieldState), _1:arg2._1.string} : (Basics.otherwise ? {ctor:"_Tuple2", _0:A3(cbGen.field, Basics.id, _str('Say something'), arg2._1), _1:_str('')} : _E.If($moduleName,'between lines 52 and 54')));
          }_E.Case($moduleName,'between lines 52 and 54')}();}();}), {ctor:"_Tuple2", _0:A3(cbGen.field, Basics.id, _str('Say something'), Graphics.Input.emptyFieldState), _1:_str('')}, A2(Signal._op['~'], A2(Signal._op['<~'], F2(function(v0, v1){
      return {ctor:"_Tuple2", _0:v0, _1:v1};}), Signal.dropRepeats(Keyboard.enter)), cbGen.events));
    return {ctor:"_Tuple2", _0:A2(Signal._op['<~'], Basics.fst, fieldState), _1:A2(Signal._op['<~'], Basics.snd, fieldState)};}();
  var FieldGen = F2(function(a, b){
    return {
      _:{
      },
      events:a,
      field:b};});
  return elm.FieldGen = {
    _op : _op, 
    fieldGen : fieldGen, 
    chatbox : chatbox};};